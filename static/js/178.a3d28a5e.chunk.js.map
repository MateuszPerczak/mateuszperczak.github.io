{"version":3,"file":"static/js/178.a3d28a5e.chunk.js","mappings":"gNAIaA,EAA4BC,EAAAA,EAAAA,IAAH,4VAUpB,YACZ,OAD2C,EAA5BC,MAASC,cAOV,YACZ,OAD0C,EAA3BD,MAASE,aAOnBC,EAAoCJ,EAAAA,EAAAA,OAAH,2SAW9B,YACZ,OADuC,EAAxBC,MAASI,UAItB,YACA,OAD2B,EAAxBJ,MAASK,UAKLC,GAAiBP,EAAAA,EAAAA,GAAOQ,EAAAA,EAAAA,IAAPR,CAAH,qG,SCxB3B,EAhB4B,SAAC,GAAkD,IAAhDS,EAA+C,EAA/CA,SAAUJ,EAAqC,EAArCA,OACvC,OACE,UAACN,EAAD,YACE,SAACK,EAAD,UAAeC,KACf,SAACE,EAAD,CACEG,QAAS,CAAEC,QAAS,EAAGC,UAAW,qBAClCC,QAAS,CAAEF,QAAS,EAAGC,UAAW,mBAClCE,WAAY,CAAEC,KAAM,SAAUC,KAAM,GAAKC,UAAW,KACpDC,cAAY,EAJd,SAMGT,S,oCCfHU,E,QAAsCnB,EAAAA,IAAH,0EAMzC,O,oECGA,E,QATgDA,EAAAA,OAAH,4KAMhB,qBAAGC,MAASK,U,mBCYzC,EAZ0C,SAAC,GAGL,IAFpCD,EAEmC,EAFnCA,OACAe,EACmC,EADnCA,KAEA,OACE,UAAC,EAAD,YACE,0BAAOf,KACP,SAACgB,EAAA,EAAD,UAAOD,S,oCCbPE,E,QAAwBtB,EAAAA,IAAH,mLAIX,YACZ,OAD0C,EAA3BC,MAASsB,aAItB,YACA,OAD2B,EAAxBtB,MAASK,UAIZ,YACA,OAD2B,EAAxBL,MAASuB,UAKlB,O,yJCjBaC,EAAoCzB,EAAAA,EAAAA,IAAH,wGAOjC0B,EAA4C1B,EAAAA,EAAAA,KAAH,6DAE3C,qBAAGC,MAAS0B,Q,SCQvB,EAZoC,SAAC,GAGF,IAFjCC,EAEgC,EAFhCA,YACAD,EACgC,EADhCA,KAEA,OACE,UAACF,EAAD,YACE,0BAAOG,KACP,SAACF,EAAD,UAAqBC,Q,+OCNrBE,EAAiB,WACrB,IAAQC,GAAMC,EAAAA,EAAAA,GAAe,cAArBD,EAER,OACE,SAACE,EAAA,EAAD,CAAM3B,OAAQyB,EAAE,cAAhB,SACGG,EAAAA,KAAe,WAAgBC,GAAW,IAAxBC,EAAuB,EAAvBA,IAAKR,EAAkB,EAAlBA,KACtB,OACE,UAACL,EAAA,EAAD,YACE,SAACc,EAAA,EAAD,CAAa/B,OAAQyB,EAAE,GAAD,OAAIK,EAAJ,YAAmBf,KAAK,YAC9C,SAACD,EAAA,EAAD,WACE,SAAC,EAAD,CAAUS,YAAaE,EAAE,GAAD,OAAIK,EAAJ,iBAAwBR,KAAMA,QAH9CO,SAYtB,GAAeG,EAAAA,EAAAA,MAAKR","sources":["Components/Page/Page.style.tsx","Components/Page/Page.tsx","Components/PanelContent/PanelContent.tsx","Components/PanelHeader/PanelHeader.style.tsx","Components/PanelHeader/PanelHeader.tsx","Components/Panel/Panel.tsx","Components/PanelExp/PanelExp.style.tsx","Components/PanelExp/PanelExp.tsx","Pages/Experience.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport { motion } from \"framer-motion\";\r\nimport PageComponent, { PageHeaderComponent } from \"./Page.types\";\r\n\r\nexport const StyledPage: PageComponent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  @media (max-width: 500px) {\r\n    margin-left: 60px;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    background: ${({ theme: { background } }) => {\r\n      return background;\r\n    }};\r\n  }\r\n  &:hover {\r\n    overflow-y: auto;\r\n    ::-webkit-scrollbar-thumb {\r\n      background: ${({ theme: { scrollbar } }) => {\r\n        return scrollbar;\r\n      }};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledHeader: PageHeaderComponent = styled.header`\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 2;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  min-height: 75px;\r\n  font-size: 1.5rem;\r\n  padding-left: 1rem;\r\n  backdrop-filter: blur(8px) saturate(180%);\r\n  background: ${({ theme: { header } }) => {\r\n    return header;\r\n  }};\r\n  border-bottom: 1px solid\r\n    ${({ theme: { border } }) => {\r\n      return border;\r\n    }};\r\n`;\r\n\r\nexport const StyledChildren = styled(motion.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n  gap: 10px;\r\n`;\r\n","import { FC, PropsWithChildren } from \"react\";\r\nimport { StyledPage, StyledHeader, StyledChildren } from \"./Page.style\";\r\n\r\ntype PageProps = PropsWithChildren<{\r\n  header: string;\r\n  wrap?: boolean;\r\n}>;\r\n\r\nconst Page: FC<PageProps> = ({ children, header }: PageProps): JSX.Element => {\r\n  return (\r\n    <StyledPage>\r\n      <StyledHeader>{header}</StyledHeader>\r\n      <StyledChildren\r\n        initial={{ opacity: 0, transform: \"translateY(100px)\" }}\r\n        animate={{ opacity: 1, transform: \"translateY(0px)\" }}\r\n        transition={{ type: \"spring\", mass: 0.2, stiffness: 150 }}\r\n        layoutScroll\r\n      >\r\n        {children}\r\n      </StyledChildren>\r\n    </StyledPage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import styled from \"@emotion/styled\";\r\nimport PanelContentComponent from \"./PanelContent.types\";\r\n\r\nconst PanelContent: PanelContentComponent = styled.div`\r\n  display: flex;\r\n  padding: 10px;\r\n  gap: 10px;\r\n`;\r\n\r\nexport default PanelContent;\r\n","import styled from \"@emotion/styled\";\r\nimport PanelHeaderComponent from \"./PanelHeader.types\";\r\n\r\nconst StyledPanelHeader: PanelHeaderComponent = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  border-bottom: 1px solid ${({ theme: { border } }) => border};\r\n`;\r\n\r\nexport default StyledPanelHeader;\r\n","import { FC } from \"react\";\r\nimport StyledPanelHeader from \"./PanelHeader.style\";\r\nimport Icon from \"../Icon/Icon\";\r\n\r\ntype PanelHeaderProps = {\r\n  header: string;\r\n  icon: string;\r\n};\r\n\r\nconst PanelHeader: FC<PanelHeaderProps> = ({\r\n  header,\r\n  icon,\r\n}: PanelHeaderProps): JSX.Element => {\r\n  return (\r\n    <StyledPanelHeader>\r\n      <span>{header}</span>\r\n      <Icon>{icon}</Icon>\r\n    </StyledPanelHeader>\r\n  );\r\n};\r\n\r\nexport default PanelHeader;\r\n","import styled from \"@emotion/styled\";\r\nimport PanelComponent from \"./Panel.types\";\r\n\r\nconst Panel: PanelComponent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 10px;\r\n  background: ${({ theme: { hamburger } }) => {\r\n    return hamburger;\r\n  }};\r\n  border: 1px solid\r\n    ${({ theme: { border } }) => {\r\n      return border;\r\n    }};\r\n  box-shadow: 0 0 5px 0\r\n    ${({ theme: { shadow } }) => {\r\n      return shadow;\r\n    }};\r\n`;\r\n\r\nexport default Panel;\r\n","import styled from \"@emotion/styled\";\r\nimport PanelExpComponent, { PanelExpDateComponent } from \"./PanelExp.types\";\r\n\r\nexport const StyledPanelExp: PanelExpComponent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nexport const StyledPanelExpDate: PanelExpDateComponent = styled.span`\r\n  font-size: 0.8rem;\r\n  color: ${({ theme: { date } }) => date};\r\n`;\r\n","import { FC } from \"react\";\r\nimport { StyledPanelExp, StyledPanelExpDate } from \"./PanelExp.style\";\r\n\r\ntype PanelExpProps = {\r\n  description: string;\r\n  date: string;\r\n};\r\n\r\nconst PanelExp: FC<PanelExpProps> = ({\r\n  description,\r\n  date,\r\n}: PanelExpProps): JSX.Element => {\r\n  return (\r\n    <StyledPanelExp>\r\n      <span>{description}</span>\r\n      <StyledPanelExpDate>{date}</StyledPanelExpDate>\r\n    </StyledPanelExp>\r\n  );\r\n};\r\n\r\nexport default PanelExp;\r\n","import { FC, memo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Page from \"../Components/Page/Page\";\r\nimport Panel from \"../Components/Panel/Panel\";\r\nimport PanelHeader from \"../Components/PanelHeader/PanelHeader\";\r\nimport PanelContent from \"../Components/PanelContent/PanelContent\";\r\nimport PanelExp from \"../Components/PanelExp/PanelExp\";\r\nimport experience from \"../Data/experience.json\";\r\n\r\nconst Experience: FC = (): JSX.Element => {\r\n  const { t } = useTranslation(\"experience\");\r\n\r\n  return (\r\n    <Page header={t(\"experience\")}>\r\n      {experience.map(({ key, date }, index) => {\r\n        return (\r\n          <Panel key={index}>\r\n            <PanelHeader header={t(`${key}.header`)} icon=\"&#xF427;\" />\r\n            <PanelContent>\r\n              <PanelExp description={t(`${key}.description`)} date={date} />\r\n            </PanelContent>\r\n          </Panel>\r\n        );\r\n      })}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default memo(Experience);\r\n"],"names":["StyledPage","styled","theme","background","scrollbar","StyledHeader","header","border","StyledChildren","motion","children","initial","opacity","transform","animate","transition","type","mass","stiffness","layoutScroll","PanelContent","icon","Icon","Panel","hamburger","shadow","StyledPanelExp","StyledPanelExpDate","date","description","Experience","t","useTranslation","Page","experience","index","key","PanelHeader","memo"],"sourceRoot":""}